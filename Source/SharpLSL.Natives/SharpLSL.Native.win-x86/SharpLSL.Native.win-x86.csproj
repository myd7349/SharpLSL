<Project Sdk="Microsoft.NET.Sdk" InitialTargets="DownloadNativeAssets">

  <PropertyGroup>
    <RID>win-x86</RID>
    <LSLAssetArchive>liblsl-$(LSLTagVersion)-Win_i386.zip</LSLAssetArchive>
    <LSLAssetFile>lsl.dll</LSLAssetFile>
    <LSLAssetUrl>https://github.com/sccn/liblsl/releases/download/v$(LSLTagVersion)/$(LSLAssetArchive)</LSLAssetUrl>
  </PropertyGroup>

  <PropertyGroup>
    <PackageId>SharpLSL.Native.$(RID)</PackageId>
    <Description>liblsl native assets for $(RID).</Description>
    <TargetsForTfmSpecificContentInPackage>$(TargetsForTfmSpecificContentInPackage);IncludeAdditionalTfmSpecificPackageFiles</TargetsForTfmSpecificContentInPackage>
  </PropertyGroup>

  <ItemGroup>
    <NativeLibs Include="$(BaseIntermediateOutputPath)bin/**/*.dll" />
    <None Include="@(NativeLibs)">
      <Pack>true</Pack>
      <PackagePath>runtimes/$(RID)/native</PackagePath>
      <Link>%(RecursiveDir)%(FileName)%(Extension)</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>
  
  <Target Name="DownloadNativeAssets" Condition="$(SkipLocalBuild) != true">
    <DownloadFile SourceUrl="$(LSLAssetUrl)"
                  DestinationFolder="$(BaseIntermediateOutputPath)"
                  DestinationFileName="$(LSLAssetArchive)"
                  Condition="!Exists('$(BaseIntermediateOutputPath)$(LSLAssetArchive)')" />

    <Unzip SourceFiles="$(BaseIntermediateOutputPath)$(LSLAssetArchive)"
           DestinationFolder="$(BaseIntermediateOutputPath)"
           OverwriteReadOnlyFiles="true"
           Condition="!Exists('$(BaseIntermediateOutputPath)bin/$(LSLAssetFile)')" />
  </Target>

  <Target Name="IncludeAdditionalTfmSpecificPackageFilesPrepare">
    <GetNuGetShortFolderName TargetFrameworkMoniker="$(TargetFrameworkMoniker)"
                             TargetPlatformMoniker="$(TargetPlatformMoniker)">
      <Output TaskParameter="NuGetShortFolderName" PropertyName="NuGetShortFolderName" />
    </GetNuGetShortFolderName>
  </Target>

  <PropertyGroup>
    <IncludeAdditionalTfmSpecificPackageFilesDependsOn>
      IncludeAdditionalTfmSpecificPackageFilesPrepare;
    </IncludeAdditionalTfmSpecificPackageFilesDependsOn>
  </PropertyGroup>

  <Target Name="IncludePlaceholders" AfterTargets="IncludeAdditionalTfmSpecificPackageFilesPrepare">
    <Touch Files="$(IntermediateOutputPath)_._" AlwaysCreate="True" />
    <ItemGroup>
      <FileWrites Include="$(IntermediateOutputPath)_._" />
      <TfmSpecificPackageFile Include="$(IntermediateOutputPath)_._"
                              PackagePath="lib\$(NuGetShortFolderName)\_._" />
    </ItemGroup>
  </Target>

  <Target Name="IncludeAdditionalTfmSpecificPackageFiles"
          DependsOnTargets="$(IncludeAdditionalTfmSpecificPackageFilesDependsOn)">
    <ItemGroup Condition=" '$(TargetFramework)' == 'net35' ">
      <TfmSpecificPackageFile Include="$(MSBuildThisFileDirectory)build\net35\$(PackageId).targets"
                              PackagePath="build\net35\$(PackageId).targets" />
    </ItemGroup>
  </Target>

</Project>
